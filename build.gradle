plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


repositories {
	mavenLocal()

    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
	}

	maven { url 'https://jitpack.io' }

	maven { url = "https://maven.kyrptonaught.dev"}

	maven { url 'https://maven.blamejared.com' }

	maven { url "https://maven.terraformersmc.com/" }

	maven { url "https://hephaestus.dev/release" }
}



dependencies {
	minecraft "com.mojang:minecraft:1.17.1"
	mappings "net.fabricmc:yarn:1.17.1+build.65:v2"
	modImplementation "net.fabricmc:fabric-loader:0.12.12"

	//Fabric api
	modImplementation "net.fabricmc.fabric-api:fabric-api:0.46.1+1.17"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.

    modImplementation include("io.github.cottonmc:LibGui:4.1.5+1.17.1")

	modImplementation 'net.kyrptonaught:customportalapi:0.0.1-beta46-1.17-dev3'
	include 'net.kyrptonaught:customportalapi:0.0.1-beta46-1.17-dev3'

	include "io.github.waterpicker:OpenWorlds-master:1.1.0"
	modImplementation "io.github.waterpicker:OpenWorlds-master:1.1.0"

	modImplementation "vazkii.patchouli:Patchouli:1.17.1-56-FABRIC-SNAPSHOT"

	modImplementation "com.github.glisco03:owo-lib:${project.owo_version}"
	include "com.github.glisco03:owo-lib:${project.owo_version}"

	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation "dev.hephaestus:seedy-behavior:${project.seedy_version}"
	include "dev.hephaestus:seedy-behavior:${project.seedy_version}"
}




processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.

	}
}

minecraft {
	accessWidener =  file("src/main/resources/charlsensideas.accesswidener")
}
